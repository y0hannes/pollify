// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  polls     Poll[]   @relation("userPolls")
  Vote      Vote[]   @relation("userVotes")
}

model Poll {
  id        String    @id @default(uuid())
  title     String
  options   Option[]  @relation("pollOptions")
  createdAt DateTime  @default(now())
  expiredAt DateTime?
  allowAnon Boolean   @default(true)
  creator   User      @relation("userPolls", fields: [creatorID], references: [id])
  creatorID String
}

model Option {
  id     String @id @default(uuid())
  text   String
  poll   Poll   @relation("pollOptions", fields: [pollId], references: [id], onDelete: Cascade)
  pollId String
  votes  Vote[] @relation()
}

model Vote {
  id       String   @id @default(uuid())
  user     User?    @relation("userVotes", fields: [voterID], references: [id])
  voterID  String?
  option   Option   @relation(fields: [optionId], references: [id])
  optionId String
  votedAt  DateTime

  @@unique([voterID, optionId])
}
